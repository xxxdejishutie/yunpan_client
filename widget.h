#ifndef WIDGET_H
#define WIDGET_H

#include <QWidget>
#include"dialog.h"
#include"menu.h"

#include<QMessageBox>
#include"ikerkel.h"

#include<map>
#include<QFileDevice>
#include"md5.h"
#include"packdef.h"
#include<qlist.h>
#include<list>
#include <sys/stat.h>//

#include<QDebug>
#include"cmytheadpool.h"
using namespace std;



QT_BEGIN_NAMESPACE
namespace Ui { class Widget; }
QT_END_NAMESPACE

class Widget : public QWidget
{
    Q_OBJECT

public:
    Widget(QWidget *parent = nullptr);
    ~Widget();
     QList<uploadfileinfo*> m_lisfileinfo; //ï¿½ï¿½ï¿½ï¿½ï¿½Ï´ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½ï¿½ï¿½Ï¢
     map<int,uploadfileinfo> m_mapfileinstall;//ï¿½æ´¢ï¿½ï¿½ï¿½Øµï¿½ï¿½Ä¼ï¿½ï¿½ï¿½Ï¢
public:
    Ui::Widget *ui;
    Dialog *m_dia;//µÇÂ¼½çÃæ
    menu *m_menu;//²Ëµ¥½çÃæ
    Ikernel *m_ikernel;//ï¿½ï¿½ï¿½ï¿½Ä£ï¿½ï¿½
    int m_user_id;//ï¿½Ã»ï¿½id
    CMyTheadPool m_threadpool;//ï¿½ß³Ì³ï¿½
    string FileDigest(const string &file);//ï¿½ï¿½ï¿½ï¿½md5Öµï¿½Äºï¿½ï¿½ï¿½
    HANDLE m_han_install_pthead;

    HANDLE map_mutex;
signals:
    void signal_uploadfilesuccess(int);
public slots:
    void slot_char(char*);
    void slot__DEF_PROTOCOL_LOGIN_RS(char*);//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â¼ï¿½Ø¸ï¿½
    void slot__DEF_PROTOCOL_GETFILELIST_RS(char*);//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È¡ï¿½Ä¼ï¿½ï¿½Ð±ï¿½
    void slot__STRU_UPLOAD_FILEINFO_RS(char *);//ï¿½ï¿½ï¿½ï¿½ï¿½Ï´ï¿½ï¿½Ä¼ï¿½ï¿½Ø¸ï¿½
    void slot_uploadfilesuccess(int);//Ã»ï¿½ï¿½ï¿½ï¿½
    void slot__DEF_DELETE_FILE_RS(char *);//ï¿½ï¿½ï¿½ï¿½É¾ï¿½ï¿½ï¿½Ä¼ï¿½ï¿½Ä»Ø¸ï¿½
    void slot__DEF_DOWNLOAD_FILEINFO_RS(char*);//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½ï¿½Ø¸ï¿½
    void slot__DEF_DOWNLOAD_FILECONTENT_SEND(char*);//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½ï¿½ï¿½
    //void slot__DEF_DOWNLOAD_SUCCESS(int);
private slots:
    void on_pushButton_clicked();//ï¿½Ï´ï¿½ï¿½Ä¼ï¿½ï¿½ï¿½Å¥



    void on_pushButton_4_clicked();
    void on_pushButton_2_clicked();

    void on_pushButton_3_clicked();

public:
    static unsigned _stdcall ThreadProc(void *lp);
    int getFileSize1(const char *fileName);
signals:
    void signal_install_success(int);
};




class filedir : public Itask//ï¿½Ì³Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½á¹¹ï¿½å£¬ï¿½æ´¢ï¿½Ä¼ï¿½ï¿½ï¿½ï¿½ï¿½Ï¢
{
public:

    filedir(STRU_UPLOAD_FILEINFO_RS* rs,uploadfileinfo *pfileinfo,Widget *pwidght)//ï¿½ï¿½ï¿½ìº¯ï¿½ï¿½
    {
        m_rs = rs;
        m_pfileinfo = pfileinfo;
        m_pwidght = pwidght;
    }
public:
    STRU_UPLOAD_FILEINFO_RS* m_rs; //ï¿½Ï´ï¿½ï¿½Ä¼ï¿½ï¿½ï¿½Ï¢ï¿½Ø¸ï¿½ï¿½ï¿½
    uploadfileinfo *m_pfileinfo;//ï¿½ï¿½Òªï¿½Ï´ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½ï¿½ï¿½Ï¢
    Widget *m_pwidght;

public:
    void Run();//ï¿½Ï´ï¿½ï¿½Ä¼ï¿½ï¿½ï¿½ï¿½ÝµÄºï¿½ï¿½ï¿½
};

#endif // WIDGET_H
